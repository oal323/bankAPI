// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bankAPI.Models;

#nullable disable

namespace bankAPI.Migrations
{
    [DbContext(typeof(BankContext))]
    [Migration("20221013013622_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("bankAPI.Models.Account", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("accountType")
                        .HasColumnType("int");

                    b.Property<decimal>("balance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("userid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.HasIndex("userid");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("bankAPI.Models.Transaction", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("destID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("sourceID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("transactionOwnerid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.HasIndex("transactionOwnerid");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("bankAPI.Models.User", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("first")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("last")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("bankAPI.Models.Account", b =>
                {
                    b.HasOne("bankAPI.Models.User", "User")
                        .WithMany("AcctsDB")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("bankAPI.Models.Transaction", b =>
                {
                    b.HasOne("bankAPI.Models.Account", "transactionOwner")
                        .WithMany("transactions")
                        .HasForeignKey("transactionOwnerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("transactionOwner");
                });

            modelBuilder.Entity("bankAPI.Models.Account", b =>
                {
                    b.Navigation("transactions");
                });

            modelBuilder.Entity("bankAPI.Models.User", b =>
                {
                    b.Navigation("AcctsDB");
                });
#pragma warning restore 612, 618
        }
    }
}
